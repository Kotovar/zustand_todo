/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TasksImport } from './routes/tasks'
import { Route as MydayImport } from './routes/myday'
import { Route as IndexImport } from './routes/index'
import { Route as TasksIdImport } from './routes/tasks.id'
import { Route as TasksTaskIdImport } from './routes/tasks.$taskId'
import { Route as TasksIdTaskIdImport } from './routes/tasks.id.$taskId'

// Create Virtual Routes

const SignupLazyImport = createFileRoute('/signup')()
const SigninLazyImport = createFileRoute('/signin')()

// Create/Update Routes

const SignupLazyRoute = SignupLazyImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup.lazy').then((d) => d.Route))

const SigninLazyRoute = SigninLazyImport.update({
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signin.lazy').then((d) => d.Route))

const TasksRoute = TasksImport.update({
  path: '/tasks',
  getParentRoute: () => rootRoute,
} as any)

const MydayRoute = MydayImport.update({
  path: '/myday',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TasksIdRoute = TasksIdImport.update({
  path: '/id',
  getParentRoute: () => TasksRoute,
} as any)

const TasksTaskIdRoute = TasksTaskIdImport.update({
  path: '/$taskId',
  getParentRoute: () => TasksRoute,
} as any)

const TasksIdTaskIdRoute = TasksIdTaskIdImport.update({
  path: '/$taskId',
  getParentRoute: () => TasksIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/myday': {
      id: '/myday'
      path: '/myday'
      fullPath: '/myday'
      preLoaderRoute: typeof MydayImport
      parentRoute: typeof rootRoute
    }
    '/tasks': {
      id: '/tasks'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninLazyImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupLazyImport
      parentRoute: typeof rootRoute
    }
    '/tasks/$taskId': {
      id: '/tasks/$taskId'
      path: '/$taskId'
      fullPath: '/tasks/$taskId'
      preLoaderRoute: typeof TasksTaskIdImport
      parentRoute: typeof TasksImport
    }
    '/tasks/id': {
      id: '/tasks/id'
      path: '/id'
      fullPath: '/tasks/id'
      preLoaderRoute: typeof TasksIdImport
      parentRoute: typeof TasksImport
    }
    '/tasks/id/$taskId': {
      id: '/tasks/id/$taskId'
      path: '/$taskId'
      fullPath: '/tasks/id/$taskId'
      preLoaderRoute: typeof TasksIdTaskIdImport
      parentRoute: typeof TasksIdImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  MydayRoute,
  TasksRoute: TasksRoute.addChildren({
    TasksTaskIdRoute,
    TasksIdRoute: TasksIdRoute.addChildren({ TasksIdTaskIdRoute }),
  }),
  SigninLazyRoute,
  SignupLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/myday",
        "/tasks",
        "/signin",
        "/signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/myday": {
      "filePath": "myday.tsx"
    },
    "/tasks": {
      "filePath": "tasks.tsx",
      "children": [
        "/tasks/$taskId",
        "/tasks/id"
      ]
    },
    "/signin": {
      "filePath": "signin.lazy.tsx"
    },
    "/signup": {
      "filePath": "signup.lazy.tsx"
    },
    "/tasks/$taskId": {
      "filePath": "tasks.$taskId.tsx",
      "parent": "/tasks"
    },
    "/tasks/id": {
      "filePath": "tasks.id.tsx",
      "parent": "/tasks",
      "children": [
        "/tasks/id/$taskId"
      ]
    },
    "/tasks/id/$taskId": {
      "filePath": "tasks.id.$taskId.tsx",
      "parent": "/tasks/id"
    }
  }
}
ROUTE_MANIFEST_END */

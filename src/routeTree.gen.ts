/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SigninImport } from './routes/signin'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedTasksImport } from './routes/_authenticated/tasks'
import { Route as AuthenticatedMydayImport } from './routes/_authenticated/myday'
import { Route as AuthenticatedTasksIdImport } from './routes/_authenticated/tasks.id'
import { Route as AuthenticatedTasksTaskIdImport } from './routes/_authenticated/tasks.$taskId'
import { Route as AuthenticatedTasksIdTaskIdImport } from './routes/_authenticated/tasks.id.$taskId'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedTasksRoute = AuthenticatedTasksImport.update({
  path: '/tasks',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedMydayRoute = AuthenticatedMydayImport.update({
  path: '/myday',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedTasksIdRoute = AuthenticatedTasksIdImport.update({
  path: '/id',
  getParentRoute: () => AuthenticatedTasksRoute,
} as any)

const AuthenticatedTasksTaskIdRoute = AuthenticatedTasksTaskIdImport.update({
  path: '/$taskId',
  getParentRoute: () => AuthenticatedTasksRoute,
} as any)

const AuthenticatedTasksIdTaskIdRoute = AuthenticatedTasksIdTaskIdImport.update(
  {
    path: '/$taskId',
    getParentRoute: () => AuthenticatedTasksIdRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/myday': {
      id: '/_authenticated/myday'
      path: '/myday'
      fullPath: '/myday'
      preLoaderRoute: typeof AuthenticatedMydayImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/tasks': {
      id: '/_authenticated/tasks'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/tasks/$taskId': {
      id: '/_authenticated/tasks/$taskId'
      path: '/$taskId'
      fullPath: '/tasks/$taskId'
      preLoaderRoute: typeof AuthenticatedTasksTaskIdImport
      parentRoute: typeof AuthenticatedTasksImport
    }
    '/_authenticated/tasks/id': {
      id: '/_authenticated/tasks/id'
      path: '/id'
      fullPath: '/tasks/id'
      preLoaderRoute: typeof AuthenticatedTasksIdImport
      parentRoute: typeof AuthenticatedTasksImport
    }
    '/_authenticated/tasks/id/$taskId': {
      id: '/_authenticated/tasks/id/$taskId'
      path: '/$taskId'
      fullPath: '/tasks/id/$taskId'
      preLoaderRoute: typeof AuthenticatedTasksIdTaskIdImport
      parentRoute: typeof AuthenticatedTasksIdImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedMydayRoute,
    AuthenticatedTasksRoute: AuthenticatedTasksRoute.addChildren({
      AuthenticatedTasksTaskIdRoute,
      AuthenticatedTasksIdRoute: AuthenticatedTasksIdRoute.addChildren({
        AuthenticatedTasksIdTaskIdRoute,
      }),
    }),
  }),
  SigninRoute,
  SignupRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/signin",
        "/signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/myday",
        "/_authenticated/tasks"
      ]
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_authenticated/myday": {
      "filePath": "_authenticated/myday.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/tasks": {
      "filePath": "_authenticated/tasks.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/tasks/$taskId",
        "/_authenticated/tasks/id"
      ]
    },
    "/_authenticated/tasks/$taskId": {
      "filePath": "_authenticated/tasks.$taskId.tsx",
      "parent": "/_authenticated/tasks"
    },
    "/_authenticated/tasks/id": {
      "filePath": "_authenticated/tasks.id.tsx",
      "parent": "/_authenticated/tasks",
      "children": [
        "/_authenticated/tasks/id/$taskId"
      ]
    },
    "/_authenticated/tasks/id/$taskId": {
      "filePath": "_authenticated/tasks.id.$taskId.tsx",
      "parent": "/_authenticated/tasks/id"
    }
  }
}
ROUTE_MANIFEST_END */
